def count_sort(array, pos):
    """Сортировка подсчетом. Сортирует массив array
    в соответствии с текущим идентификатором разряда из переменной pos"""
    _len = len(array)
    output = [0] * _len
    digits = [0] * 10

    # В цикле вычисляем значение разряда числа
    for i in range(_len):
        tmp = array[i] // pos
        digits[tmp % 10] += 1

    # Вычисляем промежуточные суммы для
    for i in range(len(digits)-1):
        digits[i+1] += digits[i]

    # Просматриваем исходный массив с конца для расставления элементов в
    # выходной массив в соответствии с индексами из массива промежуточных сумм
    for i in range(_len-1, -1, -1):
        tmp = array[i] // pos
        output[digits[tmp % 10] - 1] = array[i]
        digits[tmp % 10] -= 1

    # Записываем данные в исходный массив
    for i in range(_len):
        array[i] = output[i]


def radix_sort(array):
    """Поразрядная сортировка. Сортирует массив циклически вызывая
    функцию сортировки подсчетом для каждого разряда"""
    _max = 0
    for value in array:
        if value > _max:
            _max = value
    # pos - идентификатор порядка числа (единица укажет позицию рассматриваемого разряда)
    pos = 1
    # цикл работает, пока неполное частное не будет равно нулю, при каждой итерации увеличиваем порядок
    while _max // pos > 0:
        count_sort(array, pos)
        pos *= 10

